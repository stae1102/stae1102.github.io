---
layout: post
title:  "백준 2343 기타레슨"
excerpt: "이분 탐색"
date:   2022-02-28 23:16:00 +0900
categories: 
  - Baekjoon
tags:
  - binary_search
---

# 문제
강토는 자신의 기타 강의 동영상을 블루레이로 만들어 판매하려고 한다. 블루레이에는 총 N개의 강의가 들어가는데, 블루레이를 녹화할 때, 강의의 순서가 바뀌면 안 된다. 순서가 뒤바뀌는 경우에는 강의의 흐름이 끊겨, 학생들이 대혼란에 빠질 수 있기 때문이다. 즉, i번 강의와 j번 강의를 같은 블루레이에 녹화하려면 i와 j 사이의 모든 강의도 같은 블루레이에 녹화해야 한다.

강토는 이 블루레이가 얼마나 팔릴지 아직 알 수 없기 때문에, 블루레이의 개수를 가급적 줄이려고 한다. 오랜 고민 끝에 강토는 M개의 블루레이에 모든 기타 강의 동영상을 녹화하기로 했다. 이때, 블루레이의 크기(녹화 가능한 길이)를 최소로 하려고 한다. 단, M개의 블루레이는 모두 같은 크기이어야 한다.

강토의 각 강의의 길이가 분 단위(자연수)로 주어진다. 이때, 가능한 블루레이의 크기 중 최소를 구하는 프로그램을 작성하시오.

# 입력
첫째 줄에 강의의 수 N (1 ≤ N ≤ 100,000)과 M (1 ≤ M ≤ N)이 주어진다. 다음 줄에는 강토의 기타 강의의 길이가 강의 순서대로 분 단위로(자연수)로 주어진다. 각 강의의 길이는 10,000분을 넘지 않는다.

# 출력
첫째 줄에 가능한 블루레이 크기중 최소를 출력한다.

# 예제 입력 1
9 3
1 2 3 4 5 6 7 8 9

# 예제 출력 1
17

# 힌트
강의는 총 9개이고, 블루레이는 총 3개 가지고 있다.

1번 블루레이에 1, 2, 3, 4, 5, 2번 블루레이에 6, 7, 3번 블루레이에 8, 9 를 넣으면 각 블루레이의 크기는 15, 13, 17이 된다. 블루레이의 크기는 모두 같아야 하기 때문에, 블루레이의 크기는 17이 된다. 17보다 더 작은 크기를 가지는 블루레이를 만들 수 없다. 

---

# 풀이

https://chanhuiseok.github.io/posts/baek-22/

블로그 참고하며.

이분 탐색을 풀이할 때는 **내가 무엇을 구해야 하는지**가 가장 중요하다. 이 문제의 경우 블루레이 크기를 찾아야 하는데, 시뮬레이션을 돌려보면 추측할 수 있다.

```
9 3
1 2 3 4 5 6 7 8 9
```
이렇게 9개의 강의가 있을 때 예를 들어 블루레이 크기가 10이라고 한다면, `(1+2+3+4)`, `(5)`, `(6)`, `(7)`, `(8)`, `(9)` 이렇게 총 6개의 블루레이가 필요하다.

그렇다면 처음부터 30 정도로 크게 잡으면 어떻게 될까? `(1+2+3+4+5+6+7)`, `(8+9)`로 줄어든다.

* 즉, 블루레이 크기가 클수록 블루레이 개수가 줄어들며 블루레이 크기가 작을수록 블루레이 개수가 증가하게 되는 것이다. 즉, 이진탐색으로 가장 최적의 값을 찾을 수 있는 조건이 확인된 것이다.

## 최소와 최대 찾기(left와 right 찾기)

그렇다면 최소로 낮출 수 있는 블루레이 크기는 무엇일까? 블루레이는 모든 강의를 한 번은 담아야 하기 때문에 array에서의 최댓값이 left, 즉 최소가 되어야 한다.

최댓값은 모든 강의를 하나의 블루레이에 담으면 되기 때문에 sum한 값이 right가 된다.

초깃값을 이렇게 잡고 풀이해보자

```python
n, m = map(int, input().split())
array = list(map(int, input().split()))
```
먼저 변수를 생성한다. n과 m은 각각 강의의 개수와 갖고 있는 블루레이의 개수이다.

```python
left = max(array)
right = sum(array)
result = 987654321
```
left에는 array의 최댓값을, right에는 모두 더한 값을 두었으며, 최소한의 블루레이 크기를 찾기 위해 result를 매우 큰 값으로 두었다.

```python
while left <= right:
    mid = (left + right) // 2
    cnt, temp = 1, 0
```
cnt는 블루레이 몇 개 필요한다 받는 변수, temp는 강의를 순서대로 담아야 하기 때문에 임시로 계속 받아둘 변수이다.

```python
    for i in array:
        if temp + i > mid:
            temp = 0
            cnt += 1
        temp += i
```
temp에 계속 담다가 블루레이보다 커질 때는 cnt를 1 더하고 temp를 다시 비워 강의를 저장한다.

```python
    if cnt <= m:
        result = min(result, mid)
        right = mid - 1
    else:
        left = mid + 1
print(result)
```
cnt가 커질수록 블루레이 크기가 커졌다가 작아지게 된다. 그래서 cnt가 m보다 작거나 같을 때 result에 mid로 값을 할당한다.

## 전체 코드
```python
n, m = map(int, input().split())
array = list(map(int, input().split()))

left = max(array)
right = sum(array)
result = 987654321

while left <= right:
    mid = (left + right) // 2
    cnt, temp = 1, 0
    for i in array:
        if temp + i > mid:
            temp = 0
            cnt += 1
        temp += i
    if cnt <= m:
        result = min(result, mid)
        right = mid - 1
    else:
        left = mid + 1
    
print(result)
```